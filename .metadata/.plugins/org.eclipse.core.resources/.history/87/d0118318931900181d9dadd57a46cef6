:- [lines].
:- [nodes].

intersectionsOnStreet(A, D) :-
  belongsTo(B, A),
  isConnected(B, C),
  belongsTo(C, D),
  isRoad(D),
  D \= A.

canMoveFromTo(A, B) :-
  belongsTo(A, C),
  belongsTo(B, C),
  isRoad(C),
  ((\+ oneway(C), (isConnected(A, B) ; isConnected(B, A)));
  (oneway(C), \+ reverse(C), (isConnected(A, B)));
  (oneway(C), reverse(C), isConnected(B,A))).
  
canMove(A, B) :-
	(oneway(C) ->
		((\+ reverse(C), isConnected(A, B));
		(reverse(C), isConnected(B,A))) ;
		(isConnected(A, B) ; isConnected(B,A))),
		belongsTo(A, C),
		belongsTo(B, C),
		isRoad(C).
